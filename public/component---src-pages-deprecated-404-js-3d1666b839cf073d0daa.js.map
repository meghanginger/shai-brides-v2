{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/deprecated/404.js","webpack:///./src/components/seo.js"],"names":["Layout","children","useState","showMenu","setShowMenu","meta","name","content","className","src","require","alt","onClick","Menu","map","header","href","link","label","lost","title","SEO","description","lang","site","metaDescription","siteMetadata","htmlAttributes","property","author","concat","defaultProps"],"mappings":"sJA0FeA,IA9EA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,GACrB,OASsBC,oBAAS,IAAlCC,EAVwB,KAUdC,EAVc,KAW/B,OACE,oCACE,8BACE,0BACEC,MAAI,EACJC,KAAK,WACLC,QAAQ,0CAGZ,gCACGJ,EACC,yBAAKK,UAAU,WACb,yBAAKA,UAAU,iBACb,yBACEA,UAAU,QACVC,IAAKC,EAAQ,QACbC,IAAI,GACJC,QAAS,WACPR,GAAY,MAGfS,EAAKC,KAAI,SAAAC,GAAM,OACd,uBAAGC,KAAMD,EAAOE,MACd,4BAAKF,EAAOG,WAGhB,yBAAKV,UAAU,eACb,uBAAGQ,KAAK,wCACN,yBAAKP,IAAKC,EAAQ,WAEpB,uBAAGM,KAAK,4DACN,yBAAKP,IAAKC,EAAQ,WAEpB,uBAAGM,KAAK,oFACN,yBAAKP,IAAKC,EAAQ,WAEpB,uBAAGM,KAAK,+BACN,yBAAKP,IAAKC,EAAQ,WAEpB,uBAAGM,KAAK,uCACN,yBAAKP,IAAKC,EAAQ,cAM1B,yBACEF,UAAU,aACVC,IAAKC,EAAQ,QACbC,IAAI,GACJC,QAAS,WACPR,GAAY,OAKpB,8BACE,8BAAOH,O,kCChFf,4GAKe,SAASkB,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,QACX,yBAAKZ,UAAU,4BACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,yBAAd,SACA,wBAAIA,UAAU,oBAAd,qBACA,kBAAC,OAAD,KACE,4BAAQA,UAAU,kBAAlB,uB,4FCVd,SAASa,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMlB,EAAe,EAAfA,KAAMe,EAAS,EAATA,MAC9BI,EADuC,OACvCA,KAcFC,EAAkBH,GAAeE,EAAKE,aAAaJ,YAEzD,OACE,kBAAC,IAAD,CACEK,eAAgB,CACdJ,QAEFH,MAAOA,EACPf,KAAM,CACJ,CACEC,KAAK,cACLC,QAASkB,GAEX,CACEG,SAAS,WACTrB,QAASa,GAEX,CACEQ,SAAS,iBACTrB,QAASkB,GAEX,CACEG,SAAS,UACTrB,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASiB,EAAKE,aAAaG,QAE7B,CACEvB,KAAK,gBACLC,QAASa,GAEX,CACEd,KAAK,sBACLC,QAASkB,IAEXK,OAAOzB,KAKfgB,EAAIU,aAAe,CACjBR,KAAK,KACLlB,KAAM,GACNiB,YAAY,IAUCD","file":"component---src-pages-deprecated-404-js-3d1666b839cf073d0daa.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Menu from \"../data/menu-list\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n  const [showMenu, setShowMenu] = useState(false);\n  return (\n    <>\n      <head>\n        <meta\n          meta\n          name=\"viewport\"\n          content=\"width=device-width, user-scalable=no\"\n        />\n      </head>\n      <header>\n        {showMenu ? (\n          <div className=\"menuDiv\">\n            <div className=\"menuDivSecond\">\n              <img\n                className=\"xMenu\"\n                src={require(\"../icons/cross.svg\")}\n                alt=\"\"\n                onClick={() => {\n                  setShowMenu(false)\n                }}\n              />\n              {Menu.map(header => (\n                <a href={header.link}>\n                  <h2>{header.label}</h2>\n                </a>\n              ))}\n              <div className=\"menuIconDiv\">\n                <a href=\"https://www.instagram.com/shaibrides\">\n                  <img src={require(\"../icons/insta.svg\")} />\n                </a>\n                <a href=\"https://www.youtube.com/channel/UCUfSV1sIHcMBEou0r5JcpnQ\">\n                  <img src={require(\"../icons/youtube.svg\")} />\n                </a>\n                <a href=\"https://open.spotify.com/artist/4ubmraLEMNqkNnWkvnq0a5?si=3qRrLeXzTMuBGSVmSG4jHg\">\n                  <img src={require(\"../icons/spotify.svg\")} />\n                </a>\n                <a href=\"mailto:shaibrides@gmail.com\">\n                  <img src={require(\"../icons/mail.svg\")} />\n                </a>\n                <a href=\"https://www.facebook.com/shaibrides\">\n                  <img src={require(\"../icons/facebook.svg\")} />\n                </a>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <img\n            className=\"burgerMenu\"\n            src={require(\"../icons/burger.svg\")}\n            alt=\"\"\n            onClick={() => {\n              setShowMenu(true)\n            }}\n          />\n        )}\n      </header>\n      <body>\n        <main>{children}</main>\n      </body>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n\n// TODO: Refine menu, add nav for accessibility, ul","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nexport default function lost() {\n  return (\n    <Layout>\n      <SEO title=\"404\" />\n      <div className=\"is-grey is-light-grey-bg\">\n        <div className=\"row container-small pad-20-t pad-20-b\">\n          <div className=\"col-xs-12 col-md-6 pad-10-l\">\n            <h1 className=\"is-hero-menu margin-0\">Oops!</h1>\n            <h4 className=\"is-hero-sub-text\">No melons here...</h4>\n            <Link>\n              <button className=\"btn margin-3-t\">Take me home</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      title={title}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: title\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: title\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        }\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n"],"sourceRoot":""}